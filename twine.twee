:: StoryTitle
Agile Rabbit


:: StoryData
{
	"ifid": "6F5BF6DD-A217-4F2F-BEF5-C4EF4361C877",
	"format": "SugarCube",
	"format-version": "2.36.1",
	"start": "landing",
	"zoom": 1
}



:: Story Stylesheet [stylesheet]
@import url('https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css');
@import url('https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/css/bootstrap.min.css');
@import url('https://fonts.googleapis.com/css2?family=Caudex:ital,wght@0,400;0,700;1,400;1,700&family=Funnel+Sans:ital,wght@0,300..800;1,300..800&family=Quantico:ital,wght@0,400;0,700;1,400;1,700&display=swap');

@import url("styles/generics.css");
@import url("styles/styles.css");



:: UserScript [script]

:: Story JavaScript [script]
$('#ui-bar').remove();
$(document.head).find('#style-ui-bar').remove();


/* Google Tag */
setup.JSLoaded = false;
 var lockID = LoadScreen.lock();  // Lock loading screen
 importScripts("https://www.googletagmanager.com/gtag/js?id=G-C6NP1M5W57")
     .then(function() {

         setup.JSLoaded = true;
         window.dataLayer = window.dataLayer || [];
         window.gtag = function (){ dataLayer.push(arguments); };
         gtag('js', new Date());
         gtag('config', 'G-C6NP1M5W57');
          //  console.log("Sending to GA");
         LoadScreen.unlock(lockID);  // Unlock loading screen
     }).catch(function(error) {
         console.log("Error: Could not load 'gtag.js'.");
      LoadScreen.unlock(lockID);  // Unlock loading screen
     }
 );

/* Track Passage Views using SugarCube's passage display events */
$(document).on(':passagedisplay', function(ev) {
    var passageName = ev.passage.title;
    // console.log("sending", passageName, "to GA")
    // Send passage view event to Google Analytics
    if (setup.JSLoaded) {
        gtag('event', 'Passage View', {
            event_label: passageName,
            event_category: 'Passage',
        });
    }
});


 $(document).on('click', 'a', function (ev) {
 // Get the destination of the clicked link var passage 
 var passage = $(this).attr('data-passage');
 // Send the click event to Google Analytics
    if (setup.JSLoaded && passage) {
      // console.log("sending", passage, "click to GA")
        gtag('event', 'Navigation', {
            event_label: passage,
            event_category: 'GuestClick'
        });
    }
 });

:: StoryInit
<<cacheaudio "timer" "assets/sound/timer.mp3">>


:: header[nobr]
<header>
</header>




:: footer[nobr]
<footer>
    <<link [img[assets/img/back-black.png]]>>
        <<goto $prevpass>>
    <</link>>
       <<link [img[assets/img/for-black.png]]>>
        <<goto $nextpass>>
    <</link>>
   
</footer>

:: footerend[nobr]
<footer>
    <<link [img[assets/img/back-black.png]]>>
        <<goto $prevpass>>
    <</link>>

    <div id="nextButtonContainer">
     </div>
</footer>

:: footeroptionappears[nobr]
<footer class="grid-item footer">
  <<link [img[assets/img/back-black.png]]>>
        <<goto $prevpass>>
    <</link>>

    <div id="nextButtonContainer">
     </div>
</footer>



:: landing [nobr] 
<<set $prevpass to "landing">>
<<set $pass to "landing">>
<<set $nextpass to "intro1">>

<<set $playerchoices to {
    chosenmonsters: [],
    finalmonster: [],
    originalactions: [],
    chosenactions: [],
    changedactions:[],
    wildcards:0,
}>>
<<audio ":all" stop>>

<div class="desktop-message">
  <p>Please view this on a phone.</p>
</div>

<main class="landing">
<h1>Welcome to Stronger Together</h1>
<br/>
<h2>A card game about community resilience </h2>
<br/>
  <<button "Enter">>
        <<goto $nextpass>>
    <</button>>
</main>

/* <<include "wallet">> */

:: _templateIntro[nobr]
<<addclass "body" "light">>

<<include "headerIntro">>
<main class="talking">
    <div id="msgMount"></div>
        <<if $pass>>
            <<set $uniqueContent to $pass+"-text">>
            <<include $uniqueContent>>
        <<else>>
            No content provided.
        <</if>>
  
</main>
<<include "footeroptionappears">>

:: headerIntro [nobr]
<header class="intro">
  <h2>Stronger Together</h2>

</header>

:: intro1 [nobr]
<<set $prevpass to "landing">>
<<set $pass to "intro1">>
<<set $nextpass to "intro2">>

<<include "_templateIntro">>


:: intro1-text [nobr]
<p>Before you begin: </p>

<p>Lay out your game board as below</p>

  <div class="inline-img-container">
  <div class="inline-img-wrapper arcard">
        <h3>Game Board</h3><img src="assets/img/Demo_Game_Board.png" alt="Demo Game Board"/>
</div></div>

<p>Choose someone to play your facilitator, they’ll read out instructions & deal out game resources.</p>
<p>The facilitator can play the game, or sit on the outside, up to you. </p>

<p>When you’re ready to play: </p>

<<timed 3s>>
    <<replace "#nextButtonContainer">>
    <<button "Begin">>
            <<goto $nextpass>>
        <</button>>
    <</replace>>
<</timed>>

:: intro2 [nobr]
<<set $prevpass to "intro1">>
<<set $pass to "intro2">>
<<set $nextpass to "intro3">>

<<include "_templateIntro">>


:: intro2-text [nobr]
<p>This is Stronger Together.</p>
<p>A card game offering a 30 minute introduction to community resilience. </p>
<p>It’s designed for communities of all and any kinds to play together. </p>
<br/>
<p>By community resilience we mean communities using resources, connections, skills and expertise, to help themselves prepare for, respond to and recover from disasters. This isn’t a game about a group of politicians around a table. It's about how communities themselves might embrace what they already have, and come together for their people and their place.</p>

<<timed 3s>>
    <<replace "#nextButtonContainer">>
    <<button "Move on">>
            <<goto $nextpass>>
        <</button>>
    <</replace>>
<</timed>>

:: intro3 [nobr]
<<set $prevpass to "intro2">>
<<set $pass to "intro3">>
<<set $nextpass to "playercards">>

<<include "_templateIntro">>


:: intro3-text [nobr]
<p>
    You will play as neighbours on a single street - High Street - it’s the most common street name in the UK. 
    High Street could be anywhere in the country. There are some houses, a block of flats, and a couple of shops.
</p>
<br/>
<p>
    If there are multiple tables playing, each represents a different High Street in a different part of the UK. 
    You will all face the same disaster. 
</p>
<br/>
<p>As the residents of High Street, the disaster you will face is a monster attack. </p>
<p>The aim of the game is to prepare well, respond well and recover well from this attack. </p>
<br/>
<p>Stronger Together explores how community resilience plays out in the face of disasters.</p>
<p>It’s more broadly about community connection, and how we can be stronger together. </p>



<<timed 3s>>
    <<replace "#nextButtonContainer">>
    <<button "Let's Play">>
            <<goto $nextpass>>
        <</button>>
    <</replace>>
<</timed>>



  


:: playercards [nobr]
<<set $prevpass to "intro3">>
<<set $pass to "playercards">>
<<set $nextpass to "monstercards">>

<main class="grid-wrapper">

       
       

    <div class="grid-item explanation">
        <p>Each of you will play a character: a neighbour on High Street. </p>
        <p>We’ll start by getting to know them. </p>
        <br/>
        <p>Deal out the Player Cards, one to each player. </p>
      <div class="info-container">
         <div class="inline-img-container"><div class="inline-img-wrapper arcard">
        <h3>Player Cards</h3><img src="assets/img/Demo_Player_Card.png" alt="Player Card"/></div></div>
          <div class="grid-item cards">
      <<timed 3s>>
        <<include "timer">>
     <</timed>> 
   </div>
     </div>

        
        <p>Place the remaining cards face down in an empty doorway space on the game board. </p>
        <br/>
        <p>On your card you’ll find some information about the person you are playing - facts and skills. </p>
        <p>You can add to this card by writing in one skill of your own. </p>
        
        <br/>
        <p>Then, take five minutes to introduce yourself to your street. </p>
        <p>Share your name: it can be your real name, or an imaginary one. </p>
        <p>Share your skills & facts. </p>
    </div>

 
    </main>
    <<include "footeroptionappears">>



:: timer [nobr]
  /* <<audio "30s" "play" loop>> */
<<set $seconds to 10>>
<span id="countdown"><span class="secs">$seconds</span> <span class="extra">seconds</span></span>


<<silently>>
	<<repeat 1s>>
		<<set $seconds to $seconds - 1>>
		<<if $seconds gt 0>>
			<<replace "#countdown">><span class="secs">$seconds</span> <span class="extra">seconds</span><</replace>>
		<<else>>
			<<replace "#countdown">><strong>Times up</strong><</replace>>
      <<timed 1.5s>>
       <<replace "#nextButtonContainer">>
        <<button "Move On">>
            <<goto $nextpass>>
            <</button>>
        <</replace>>
        <</timed>>
  
			<<stop>>
		<</if>>
	<</repeat>>
<</silently>>

:: 3mtimer [nobr]
  /* <<audio "30s" "play" loop>> */
<<set $seconds to 5>>
<span id="countdown"><span class="secs">$seconds</span> <span class="extra">seconds</span></span>


<<silently>>
	<<repeat 1s>>
		<<set $seconds to $seconds - 1>>
		<<if $seconds gt 0>>
			<<replace "#countdown">><span class="secs">$seconds</span> <span class="extra">seconds</span><</replace>>
		<<else>>
			<<replace "#countdown">><strong>Times up</strong><</replace>>
      <<timed 1.5s>>
       <<replace "#nextButtonContainer">>
        <<if $pass is "questions">>
             <<button "End">>
            <<goto $nextpass>>
             <</button>>
         <<else>>
            <<button "Move On">>
            <<goto $nextpass>>
             <</button>>
            <</if>>
        <</replace>>
        <</timed>>
  
			<<stop>>
		<</if>>
	<</repeat>>
<</silently>>


:: monstercards [nobr]
<<set $prevpass to "playercards">>
<<set $pass to "monstercards">>
<<set $nextpass to "chosenMonsterForecast">>

<main class="">
    <div class="explanation">
      <p> As you settle into your new homes and characters disaster looms on the horizon: a monster is coming. </p>
<p>There are four possible monsters that might strike. </p>
<br/>
<p>Before you decide how to prepare for the monster attack, you’re going to get a forecast. </p>
<p>Shuffle the monster cards and draw 2. </p>
<p>Select the cards you drew below. </p>

   
    </div>
<h2>Chosen Monsters: <span id="chosenMonsterMount"><<print $playerchoices.chosenmonsters>></span></h2>
<p id="errorMsg" style="color: red;"></p> <!-- Error message area -->
<br/>
<div class="cards-selection">

<!-- Gale -->
<div id="galeChoice" class="card-selection-item arcard">

    <<link [img[assets/img/Demo_Gale.png]]>>
        <<if $playerchoices.chosenmonsters.includes("Gale")>>
            <<set $playerchoices.chosenmonsters.delete("Gale")>>
            <<toggleclass "#galeChoice" "chosen">>
            <<replace "#errorMsg">><<print "">><</replace>> <!-- Clear error message -->
        <<elseif $playerchoices.chosenmonsters.length < 2>> 
            <<set $playerchoices.chosenmonsters.push("Gale")>>
            <<toggleclass "#galeChoice" "chosen">>
            <<replace "#errorMsg">><<print "">><</replace>> <!-- Clear error message -->
        <<else>>
            <<replace "#errorMsg">><<print "You can only choose 2 monsters!">><</replace>>
        <</if>>
<<include "checkChosenMonsterCards">>
    <</link>>
</div>

<!-- Inferno -->
<div id="infernoChoice" class="card-selection-item arcard">
    <<link [img[assets/img/Demo_Inferno.png]]>>
        <<if $playerchoices.chosenmonsters.includes("Inferno")>>
            <<set $playerchoices.chosenmonsters.delete("Inferno")>>
            <<toggleclass "#infernoChoice" "chosen">>
            <<replace "#errorMsg">><<print "">><</replace>> <!-- Clear error message -->
        <<elseif $playerchoices.chosenmonsters.length < 2>> 
            <<set $playerchoices.chosenmonsters.push("Inferno")>>
            <<toggleclass "#infernoChoice" "chosen">>
            <<replace "#errorMsg">><<print "">><</replace>> <!-- Clear error message -->
        <<else>>
            <<replace "#errorMsg">><<print "You can only choose 2 monsters!">><</replace>>
        <</if>>
<<include "checkChosenMonsterCards">>
    <</link>>
</div>

<!-- Drench -->
<div id="drenchChoice" class="card-selection-item arcard">
    <<link [img[assets/img/Demo_Drench.png]]>>
        <<if $playerchoices.chosenmonsters.includes("Drench")>>
            <<set $playerchoices.chosenmonsters.delete("Drench")>>
            <<toggleclass "#drenchChoice" "chosen">>
            <<replace "#errorMsg">><<print "">><</replace>> <!-- Clear error message -->
        <<elseif $playerchoices.chosenmonsters.length < 2>> 
            <<set $playerchoices.chosenmonsters.push("Drench")>>
            <<toggleclass "#drenchChoice" "chosen">>
            <<replace "#errorMsg">><<print "">><</replace>> <!-- Clear error message -->
        <<else>>
            <<replace "#errorMsg">><<print "You can only choose 2 monsters!">><</replace>>
        <</if>>
<<include "checkChosenMonsterCards">>
    <</link>>
</div>

<!-- Crystal -->
<div id="crystalChoice" class="card-selection-item arcard">
    <<link [img[assets/img/Demo_Crystal.png]]>>
        <<if $playerchoices.chosenmonsters.includes("Crystal")>>
            <<set $playerchoices.chosenmonsters.delete("Crystal")>>
            <<toggleclass "#crystalChoice" "chosen">>
            <<replace "#errorMsg">><<print "">><</replace>> <!-- Clear error message -->
        <<elseif $playerchoices.chosenmonsters.length < 2>> 
            <<set $playerchoices.chosenmonsters.push("Crystal")>>
            <<toggleclass "#crystalChoice" "chosen">>
            <<replace "#errorMsg">><<print "">><</replace>> <!-- Clear error message -->
        <<else>>
            <<replace "#errorMsg">><<print "You can only choose 2 monsters!">><</replace>>
        <</if>>
<<include "checkChosenMonsterCards">>
    <</link>>
</div>

</div>
<br/>
<p>The monster attack will be one of these two cards, but it’s a 50 / 50 chance. </p>

    </main>
    <<include "footeroptionappears">>
 <<include "checkChosenMonsterCards">>


:: checkChosenMonsterCards [nobr]
<<if $playerchoices.chosenmonsters.includes("Gale")>>
    <<addclass "#galeChoice" "chosen">>
    <</if>>
<<if $playerchoices.chosenmonsters.includes("Drench")>>
    <<addclass "#drenchChoice" "chosen">>
    <</if>>
<<if $playerchoices.chosenmonsters.includes("Inferno")>>
    <<addclass "#infernoChoice" "chosen">>
    <</if>>
<<if $playerchoices.chosenmonsters.includes("Crystal")>>
    <<addclass "#crystalChoice" "chosen">>
    <</if>>

<<if $playerchoices.chosenmonsters.length === 2>>
    <<timed 0.1s>>
    <<replace "#nextButtonContainer">>
            <<button "Confirm and move on">>
                <<goto $nextpass>>
            <</button>>
        <</replace>>
    <</timed>>
    <</if>>

<<timed 0.1s>>
<<replace "#chosenMonsterMount">>
    $playerchoices.chosenmonsters
    <</replace>>
<</timed>>


:: chosenMonsterForecast [nobr]
<<set $prevpass to "monstercards">>
<<set $pass to "chosenMonsterForecast">>
<<set $nextpass to "actions">>
<<timed 5s>>
    <<include "headertimer">>
<</timed>>
<main class="timer">
    <div class="explanation">
<p>Now you know what might be coming, there is a chance to prepare. </p>
<p>There are different actions you might take to get ready for the monster attack. </p>

<p>Prepare actions, focussed on physical preparation. </p>
 <p>Connect actions, focussed on connecting to the street and the local community. </p>

<p>Lay out the Prepare and Connect actions on the table ahead of you. </p>
<p>You need to choose FIVE actions to prepare for the monster attack. </p>


<p>A reminder of the forecast: </p>
<br/>
<<include "chosenmonstersdisplay">>
    </div>
<br/>
<p>Take five minutes to choose your actions.</p>
<p>Put your chosen actions on your game board. </p>
<p>Put the remaining action cards face down in a discard pile. </p>
<br/>
 
</main>

<<include "footeroptionappears">>

:: headertimer [nobr]
<header class="timer">

      <<include "timer">>

</header>


:: chosenmonstersdisplay [nobr]
 <<set $img1 to "assets/img/" + "Demo_" + $playerchoices.chosenmonsters[0] + ".png">>
 <<set $img2 to "assets/img/" + "Demo_" + $playerchoices.chosenmonsters[1] + ".png" >>

<div class="cards-selection">
    <div class="card-selection-item arcard">
        [img[$img1]]
    </div>
    <div class="card-selection-item arcard">
        [img[$img2]]
    </div>
</div>


:: actions [nobr]
<<set $prevpass to "chosenMonsterForecast">>
<<set $pass to "actions">>
<<set $nextpass to "predice">>
<<set $actionsoptions to [
    {type: "prepare", actionnum: 1, text: "Lay out some salt.", id:1},
    {type: "prepare", actionnum: 2, text: "Gather drinks and ice." , id:2},
    {type: "prepare", actionnum: 3, text: "Clear away or secure objects.", id:3},
    {type: "prepare", actionnum: 4, text: "Set up barriers, blocks, and absorbent pads.", id:4},
    {type: "prepare", actionnum: 5, text: "Gather together an emergency kit.", id:5},
    {type: "prepare", actionnum: 6, text: "Have a plan.", id:6},
    {type: "prepare", actionnum: 7, text: "Move precious belongings.", id:7},
    {type: "connect", actionnum: 1, text: "Set up a messaging group.", id:8},
    {type: "connect", actionnum: 2, text: "Go door-knocking.", id:9},
    {type: "connect", actionnum: 3, text: "Connect to the community centre.", id:10},
    {type: "connect", actionnum: 4, text: "Connect to the local school or faith space.", id:11},
    {type: "connect", actionnum: 5, text: "Sign up for alerts and warnings.", id:12}
]>>


<main class="">
    <div class="explanation">
    <p>Take a moment to read out your choices.</p> 
<p>Then tell us what you’ve selected here </p>
    </div>
    <<include "actionslist">>
    <br/>
    <<button "Reset">>
        <<set $playerchoices.chosenactions to []>>
        <<goto "actions">>
        <</button>>
    /* 5 Chosen Actions: <div id="chosenActionsMount"></div> */
</main>
<<include "footeroptionappears">>

:: actionslist [nobr]
<div class="actions-list">
<<for _i to 0; _i lt $actionsoptions.length; _i++>>
  <<capture _i>>
    <<set $text to ($actionsoptions[_i].text)>>
    
<div sc-eval:class="'actions-item actions-item' + ($actionsoptions[_i].id)" sc-eval:id="'action' + [_i]" sc-eval:data-id="'action' + [_i]">
   <h3>$actionsoptions[_i].type</h3> $text
   <br/>

     <<link "Choose">>
    <<set $playerchoices.chosenactions.push($actionsoptions[_i].id)>>
     <<set $playerchoices.originalactions.push($actionsoptions[_i].id)>>
    <<timed 0.1s>>
     <<include "checkChosenActions">>   
    <</timed>>       
     <</link>>
           </div>
       <</capture>>
   <</for>>
</div>


:: checkChosenActions [nobr]

  <<for _i to 0; _i lt $actionsoptions.length; _i++>>
    <<if $playerchoices.chosenactions.includes($actionsoptions[_i].id)>>
        <<set $class to ".actions-item" + (_i+1) >>
        <<addclass $class "chosen">>
    <</if>>
<</for>>  

<<if $playerchoices.chosenactions.length < 5>>
    <<replace "#nextButtonContainer">>
           <span>Choose 5 actions</span>
        <</replace>>
<<elseif $playerchoices.chosenactions.length === 5>>
    <<timed 0.1s>>
    <<replace "#nextButtonContainer">>
            <<button "Confirm and move on">>
                <<goto $nextpass>>
            <</button>>
        <</replace>>
    <</timed>>
    <</if>>

<<timed 0.1s>>
<<replace "#chosenActionsMount">>
    $playerchoices.chosenactions
    <</replace>>
<</timed>>

:: predice [nobr]

<<set $prevpass to "actions">>
<<set $pass to "predice">>
<<set $nextpass to "diceresults">>
<<set $diceoptions to [
    {num:1, 
    text1: "Things are pretty bad. 
Local resources are depleted, minimal thought and effort has gone into preparing for disaster. 
Because of poor planning and lack of investment not everything you try and do will be successful", 
    text2:"Two of your actions will be unsuccessful, and can’t go ahead. You’ll need to come together as a community to use your own skills and resources in its place.",
     wildcards: 0, 
    changedactions: 2},
     {num:2, 
    text1: "Things aren’t great. 
Local resources are depleted, minimal thought and effort has gone into preparing for disaster. 
Because of poor planning and lack of investment not everything you try and do will be successful", 
    text2: "One of your actions will be unsuccessful, and can’t go ahead. You’ll need to come together as a community to use your own skills and resources in its place.", 
     wildcards: 0, 
    changedactions: 1},
     {num:3, 
    text1: "Things are okay.
Everyone is getting by, the local council are doing their best to stumble on.", 
    text2: "You won’t lose access to any of your preparations, but there is no extra help coming either. ", 
     wildcards: 0, 
    changedactions: 0},
     {num:4, 
    text1: "Things are alright. 
Everyone is getting by, the council is doing their best to keep it all afloat. ", 
     text2: "You won’t lose access to any of your preparations, and there is a little extra support. 
Thanks to your local councillor, you can draw a green wildcard later. ", 
     wildcards: 1, 
    changedactions: 0},
     {num:5, 
    text1: "You are fortunate. 
The local council has had the time, money and resources to put some time into disaster preparation. 
There’s some extra help available.", 
    text2:"Thanks to your engaged local councilor, you can  draw two green wildcards later. ",
     wildcards: 2, 
    changedactions: 0},
    {num:6, 
    text1: "You are very fortunate. 
The local council has had the time, money and resources to put some time into disaster preparation. 
There’s some extra help available. ", 
     text2: "Thanks to your very engaged local councilor, you can also  draw three green wildcards later. ", 
     wildcards: 3, 
    changedactions: 0}
]
  >>
<<set $diceroll to "">>

<main>
    <div class="explanation">
  <p>  We’ve told you very little about the High Street you live on. </p>
<br/>
<p>    But we do all know that the world is unfair. </p>
<p>    Life on different High Streets vary wildly across the UK. </p>
<br/>
   <p> Before the monster arrives, we’re going to find out just how unfair things are: how fortunate this High Street is. </p>
  <p>  To do this we’ll roll a die. </p>

  <<button "Roll">>
<<set $diceroll to random(0,5) >>
/* <<goto $nextpass>> */
<<goto "rolling">>
    <</button>>
    </div>
</main>
<<include "wallet">>
<<include "footer">>

:: rolling [nobr]
<main class="maindice">
    <div class="dice roll"></div>
    <<type 60ms>>
      <h2>  Rolling...</h2>
    <</type>>
</main>
<<timed 3.5s>><<goto $nextpass>><</timed>>


:: diceresults [nobr]
<<set $prevpass to "predice">>
<<set $pass to "diceresults">>
<<set $nextpass to "forecast">>

<main>
   <div class="result">
   <h2>Result</h2>
        $diceoptions[$diceroll].text1
        <br/>
        <div id="proposedChangeMount"></div>
        <br/>
        $diceoptions[$diceroll].text2
   </div>
    <br/>    <br/>    <br/>
<div>
    <p>Are you happy with your fortune?</p>
    <p>In the real world fortune is very hard to change. </p>
    <p>But since this is a game... Would you like to roll again? </p>
    <<button "Roll again">>
        <<set _failedActions to []>> 
        <<set $diceroll to random(0,5) >>
        <<goto "diceresults">>
        <</button>>
    
</div>
/* <<include "wallet">> */
<<include "checkForUnsucessfulActions">>
</main>

<<include "footeroptionappears">>
 <<timed 0.1s>>
    <<replace "#nextButtonContainer">>
            <<button "Confirm and move on">>
                /* <<goto $nextpass>> */
                <<include "saveResultsOfDiceRoll">>
            <</button>>
        <</replace>>
    <</timed>>



:: checkForUnsucessfulActions [nobr]

<<if $diceoptions[$diceroll].changedactions > 0>>
    <<set _failedActions to []>> 

    /* Select up to two failed actions randomly */
    <<for _i to 0; _i lt Math.min(2, $diceoptions[$diceroll].changedactions); _i++>>
        <<set _failedIndex to random(0, $playerchoices.chosenactions.length - 1)>>
        <<set _failedActionID to $playerchoices.chosenactions[_failedIndex]>>
        <<set _failedActions.push(_failedActionID)>>
    <</for>>

    /* Loop through all actions and check for matches */
    <<timed 0.1s>>
        <<replace "#proposedChangeMount">>
            <br/>
            <h3>Unsuccessful actions:</h3>
            <div class="actions-list">
                <<for _i to 0; _i lt $actionsoptions.length; _i++>>
                    <<if _failedActions.includes($actionsoptions[_i].id)>>
                        <div class="actions-item">
                            <h3>$actionsoptions[_i].type</h3> 
                            <p>$actionsoptions[_i].text</p>
                        
                        </div>
                    <</if>>
                <</for>>
            </div>
        <</replace>>
    <</timed>>
<</if>>

:: saveResultsOfDiceRoll
<<set $playerchoices.wildcards to $diceoptions[$diceroll].wildcards>>
<<set $updatedChosenActions to []>> <!-- New array to hold filtered values -->
<<if _failedActions>>
 <<set $playerchoices.changedactions to _failedActions>>
<<for _i to 0; _i lt $playerchoices.chosenactions.length; _i++>>
    <<if !_failedActions.includes($playerchoices.chosenactions[_i])>> <!-- Check if the action is not in _failedActions -->
        <<set $updatedChosenActions.push($playerchoices.chosenactions[_i])>> <!-- Add it to the new array if it's not a failed action -->
    <</if>>
<</for>>
<</if>>

<!-- Replace the original chosenactions with the filtered version -->
<<set $playerchoices.chosenactions = $updatedChosenActions>>
<<timed 0.5s>>
    <<goto $nextpass>>
    <</timed>>


:: wallet [nobr]
<div class="wallet">
    <h2>Wallet</h2>
    <span>Monsters: $playerchoices.chosenmonsters</span>
    <span>Final Monster: $playerchoices.finalmonster</span>
    <span>Original Actions: $playerchoices.originalactions</span>
    <span>Chosen Actions: $playerchoices.chosenactions</span>
    <span>Changed Actions: $playerchoices.changedactions</span>
    <span>Wildcards: $playerchoices.wildcards</span>
    
</div>

:: forecast [nobr]
<<set $prevpass to "diceresults">>
<<set $pass to "forecast">>
<<set $nextpass to "story">>

<main>
<div class="explanation">
<p>Now, the monster attack is moments away. We can finally see which monster is coming. </p>

<p>Shuffle the two forecast cards. Choose one to reveal the monster. </p>

<p>Select the monster below. </p>
</div>
<<include "choosefinalmonster">>
<br/>
/* <<include "wallet">> */
</main>

<<include "footeroptionappears">>

:: choosefinalmonster [nobr]
 <<set $img1 to "assets/img/" + "Demo_" + $playerchoices.chosenmonsters[0] + ".png" >>
 <<set $img2 to "assets/img/" + "Demo_" + $playerchoices.chosenmonsters[1] + ".png" >>


<div class="cards-selection">
    <div class="card-selection-item arcard" id="card1">
        <<link [img[$img1]]>>
            <<if $playerchoices.finalmonster == $playerchoices.chosenmonsters[0]>>
                <<set $playerchoices.finalmonster to "">> <!-- Deselect if already selected -->
              
            <<else>>
                <<set $playerchoices.finalmonster to $playerchoices.chosenmonsters[0]>> <!-- Select this, deselect the other -->
                  <<removeclass "#card2" "chosen">>
            <</if>>

                <<include "checkFinalMonsterChoice">>

        <</link>>
    </div>
    
    <div class="card-selection-item arcard" id="card2">
        <<link [img[$img2]]>>
            <<if $playerchoices.finalmonster == $playerchoices.chosenmonsters[1]>>
                <<set $playerchoices.finalmonster to "">> <!-- Deselect if already selected -->
            <<else>>
                <<set $playerchoices.finalmonster to $playerchoices.chosenmonsters[1]>> <!-- Select this, deselect the other -->
                <<removeclass "#card1" "chosen">>
            <</if>>

                <<include "checkFinalMonsterChoice">>
      
        <</link>>
    </div>
</div>
  <<include "checkFinalMonsterChoice">>


:: checkFinalMonsterChoice [nobr]
 <<timed 0.1s>> 
    <<for _i to 0; _i lt 2; _i++>>
    <<if $playerchoices.finalmonster === $playerchoices.chosenmonsters[0]>>
        <<set _id to "#card1" >>
        <<addclass _id "chosen">>
    <<elseif $playerchoices.finalmonster === $playerchoices.chosenmonsters[1]>>
        <<set _id to "#card2" >>
        <<addclass _id "chosen">>
    <</if>>
<</for>>  
<</timed>>


    <<timed 0.1s>>
    <<replace "#nextButtonContainer">>
         <span>Choose 1 Monster</span>
        <</replace>>
    <</timed>>
<<if $playerchoices.finalmonster != "">>
    <<timed 0.1s>>
        <<replace "#nextButtonContainer">>
            <<button "Confirm and move on">>
                <<goto $nextpass>>
            <</button>>
        <</replace>>
    <</timed>>
<</if>>


:: story [nobr]
<<set $prevpass to "forecast">>
<<set $pass to "story">>
<<set $nextpass to "pullwildcards">>


<main>
<h2>Now the monster is closing in on High Street. </h2>
<h3>We’re going to uncover how this attack plays out. </h3>
<br/><br/>
/* CONNECT 5 = id 12 */
<<if $playerchoices.chosenactions.includes(12)>>
    <p>You signed up for alerts, so everyone was warned about the monster in good time. The alerts included up to date guidance, and no neighbours were caught out by outdated methods. </p>
 <</if>>
<<if !$playerchoices.chosenactions.includes(12) && !$playerchoices.changedactions.includes(12)>>
    <p>You didn’t sign up for alerts, so not everyone was warned about the monster in good time. Without up to date guidance, many households used outdated methods to keep the monster at bay, putting them in further danger. </p>
 <</if>>
<<if $playerchoices.changedactions.includes(12)>>
    <p>You weren’t able to sign up for alerts, so not everyone was warned about the monster in good time, or given the most up to date guidance. But! You can use your skills and resources to help. </p>
    <p>Pick one player who will take a single action to share updated guidance, to ensure everyone knows how to react. </p>
 <</if>>

/* CRYSTAL & PREPARE 1 = id 1 */
<<if $playerchoices.finalmonster is "Crystal" && $playerchoices.chosenactions.includes(1)>>
    <p>You laid out some salts to guide Crystal down your street. She leaves no residue, so when your neighbours venture out, there are no slips or falls.  </p>
 <</if>>
<<if $playerchoices.finalmonster is "Crystal" && !$playerchoices.chosenactions.includes(1) && !$playerchoices.changedactions.includes(1)>>
    <p>You didn’t lay out grit to guide Crystal down your street. The streets are slippy and icy. A couple of neighbours who do venture out slip and fall, resulting in a broken wrist and two sprained ankles.</p>
 <</if>>
<<if $playerchoices.finalmonster is "Crystal" && $playerchoices.changedactions.includes(1)>>
<p>You weren’t able to lay out grit to guide Crystal down your street. But! You can use your skills and resources to help. </p>
<p>Pick one player who will take a single action to guide your neighbours safely down the street. </p>
 <</if>>

/* INFERNO & PREPARE 2 = id 2 */
<<if $playerchoices.finalmonster is "Inferno" && $playerchoices.chosenactions.includes(2)>>
    <p>You gathered drinks and ice in preparation for Inferno’s visit. As the temperature creeps up, you’re able to make sure everyone is cool and hydrated, minimising the health impact of Inferno’s attack. </p>
 <</if>>
<<if $playerchoices.finalmonster is "Inferno" && !$playerchoices.chosenactions.includes(2) && !$playerchoices.changedactions.includes(2)>>
    <p>You didn’t gather drinks and ice in preparation for Inferno’s visit. As the temperature creeps up, some neighbours, especially those with existing health conditions, begin to suffer. Two people are left dehydrated, and one neighbour faints and has to be taken to hospital. </p>
 <</if>>
<<if $playerchoices.finalmonster is "Inferno" && $playerchoices.changedactions.includes(2)>>
<p> You weren’t able to gather drinks and ice in preparation for Inferno’s visit. As the temperature creeps up, you’ll need to use your skills and resources to keep your neighbours safe. </p>
<p>Pick one player who will take a single action to care for their neighbors in the extreme heat. </p>
 <</if>>

/* GALE & PREPARE 3 = id 3 */
<<if $playerchoices.finalmonster is "Gale" && $playerchoices.chosenactions.includes(3)>>
    <p>You cleared away or secured objects outside before Gale’s arrival. While she bangs at the doors of sheds, and pulls at the cables you’ve tied, nothing escapes. Neighbours are kept safe from flying debris.  </p>
 <</if>>
<<if $playerchoices.finalmonster is "Gale" && !$playerchoices.chosenactions.includes(3) && !$playerchoices.changedactions.includes(3)>>
    <p>You didn’t clear away or secure objects outside before Gale’s arrival. She bangs at the doors of sheds, and lifts chairs and even a trampoline into the air. One neighbour is hit by a flying parasol and has to go to hospital.  </p>
 <</if>>
<<if $playerchoices.finalmonster is "Gale" && $playerchoices.changedactions.includes(3)>>
<p>You weren’t able to clear away or secure outside objects before Gale’s arrival. As she swirls down ready to lift objects into the air, you’ll have to rely on your own skills and resources. </p>
<p>Pick one player who will take a single action to protect neighbours from flying debris. </p>

 <</if>>

 /* DRENCH & PREPARE 4 = id 4 */
<<if $playerchoices.finalmonster is "Drench" && $playerchoices.chosenactions.includes(4)>>
    <p>You set up barriers, blocks and absorbent pads to keep out or soak up Drench. When she arrives, the barriers, blocks and pads keep homes water free, with no risk of disease or electric shock. </p>
 <</if>>
<<if $playerchoices.finalmonster is "Drench" && !$playerchoices.chosenactions.includes(4) && !$playerchoices.changedactions.includes(4)>>
    <p>You didn’t set up barriers, blocks and absorbent pads to keep out or soak up Drench. When she arrives, she rushes into homes. Two neighbours end up with respiratory infections from the floodwater, and a family is stuck upstairs in their house, unable to go down because of the risk of electric shock.  </p>
 <</if>>
<<if $playerchoices.finalmonster is "Drench" && $playerchoices.changedactions.includes(4)>>
<p>You weren’t able to set up barriers, blocks and absorbent pads to keep out or soak up Drench. As she rushes in, you’ll have to rely on your own skills and resources. </p>
<p>Pick one player who will take a single action to protect neighbours from disease and electric shock due to floodwater. </p>

 <</if>>

/* CONNECT 1 = id 8 */
<<if $playerchoices.chosenactions.includes(8)>>
<p> You set up a messaging group to keep in touch with neighbours, which connected you to someone on the street you hadn’t met. </p>
<p>Turn over one of the face down household cards. </p>
<p>You are able to include this neighbour in your preparations, involving their skills and providing support if needed. </p>

 <</if>>
<<if !$playerchoices.chosenactions.includes(8) && !$playerchoices.changedactions.includes(8)>>
<p>You didn’t set up a messaging group to keep in touch with neighbours, so you didn’t meet someone on the street who is rarely home to answer the door. </p>
<p>Turn over one of the face down household cards. </p>
<p>You were not able to include this neighbour in your preparations, or involve their skills or provide support, even if it was needed. </p>

 <</if>>
<<if $playerchoices.changedactions.includes(8)>>
<p>You weren’t able to set up a messaging group to keep in touch with neighbours, so you didn’t meet someone on the street who is rarely home to answer the door. </p>
<p>Turn over one of the face down household cards. </p>
<p>However, you do have your own skills and resources. Pick one player who will take a single action to provide support to this neighbour. 
t neighbours from disease and electric shock due to floodwater. </p>
 <</if>>

/* CONNECT 2 = id 9 */
<<if $playerchoices.chosenactions.includes(9)>>
<p>You went doorknocking along the street which connected you to one of your neighbours who you hadn’t met, who doesn’t use WhatsApp. </p>
<p>Turn over one of the face down household cards. </p>
<p>You are able to include this neighbour in your preparations, involving their skills and providing support if needed. </p>
 <</if>>
<<if !$playerchoices.chosenactions.includes(9) && !$playerchoices.changedactions.includes(9)>>
<p>You didn’t go doorknocking down your street, so you didn’t meet a neighbour who does not use WhatsApp. </p>
<p>Turn over one of the face down household cards. </p>
<p>You were not able to include this neighbour in your preparations, or involve their skills or provide support, even if it was needed.</p>
 <</if>>
<<if $playerchoices.changedactions.includes(9)>>
<p>You weren’t able to go door knocking down your street, so you didn’t meet a neighbour who does not use WhatsApp. </p>
<p>Turn over one of the face down household cards. </p>
<p>However, you do have your own skills and resources. Pick one player who will take a single action to provide support to this neighbour.  
</p>
 <</if>>

/* PREPARE 5 = id 5 */
<<if $playerchoices.chosenactions.includes(5)>>
<p>You moved precious belongings in your home to a safe place. As the monster rushes in, belongings sit on high shelves and in attics. Safe and out of reach.</p>
 <</if>>
<<if !$playerchoices.chosenactions.includes(5) && !$playerchoices.changedactions.includes(5)>>
<p>You didn’t move precious belongings in your home to a safe place. As the monster rushes in, belongings are swept away with them. One resident loses all their family photographs, and another is left trying to work out how to afford a new computer. </p>
 <</if>>
<<if $playerchoices.changedactions.includes(5)>>
<p>You weren’t able to move precious belongings in your home to a safe place. As the monster arrives, you’ll have to rely on your own skills and resources. </p>
<p>Pick one player who will take a single action to protect precious belongings from monster attack.</p>
 <</if>>

/* PREPARE 6 = id 6 */
<<if $playerchoices.chosenactions.includes(6)>>
<p>You prepared an emergency kit. When the monster attacks the electricity supply, leading to a 24h outage, you’re ready. You have food, water and a first aid kit, and a wind up radio to stay entertained. </p>
 <</if>>
<<if !$playerchoices.chosenactions.includes(6) && !$playerchoices.changedactions.includes(6)>>
<p>You didn’t prepare an emergency kit. When the monster attacks the electricity supply, leading to a 24h outage, you’re unprepared. You can’t regulate your temperature, struggle to find edible food, and all you have is each other for entertainment. </p>
 <</if>>
<<if $playerchoices.changedactions.includes(6)>>
<p>You weren’t able to prepare an emergency kit. When the monster attacks the electricity supply, leading to a 24h outage, you have to rely on your own skills and resources. </p>
<p>Pick one player who will take a single action to care for the street during the outage. </p>
 <</if>>

/* PREPARE 7 = id 7 */
<<if $playerchoices.chosenactions.includes(7)>>
<p>You made a plan and created a ‘grab bag’. When the monster forces you to evacuate, you have all you need with you: food, water and a phone charger so you can stay in touch with the rest of the street.  </p>
 <</if>>
<<if !$playerchoices.chosenactions.includes(7) && !$playerchoices.changedactions.includes(7)>>
<p>You didn’t make a plan and or create a ‘grab bag’. When the monster forces you to evacuate, you forget some key items, including your phone charger. When your neighbour calls asking for help, your phone has no battery. It doesn’t ring.</p>
 <</if>>
<<if $playerchoices.changedactions.includes(7)>>
<p>You weren’t able to make a plan and or create a ‘grab bag’. When the monster forces you to evacuate, you’re stuck. You do however have your skills and resources. </p>
<p>Pick one player who will take a single action to care for the street during the evacuation.</p>
 <</if>>

/* CONNECT 3 = id 10 */
<<if $playerchoices.chosenactions.includes(10)>>
<p>You connected to the community centre, so that when resources run low, you have somewhere to turn to. Several households begin to run out of food, but the community centre’s food bank makes sure everyone is well fed.  </p>
 <</if>>
<<if !$playerchoices.chosenactions.includes(10) && !$playerchoices.changedactions.includes(10)>>
<p>You didn’t connect to the community centre, so that when resources run low, there is nowhere to turn. Several households begin to run out of food, and are left hungry. </p>
 <</if>>
<<if $playerchoices.changedactions.includes(10)>>
<p>You weren’t able to connect to the community centre. When resources run low, there is nowhere to turn. Several households begin to run out of food, and all you have are your own skills and resources.</p>
<p>Pick one player who will take a single action to provide support to their neighbours. </p>
 <</if>>

/* CONNECT 4 = id 11 */
<<if $playerchoices.chosenactions.includes(11)>>
<p>You connected to the local school or faith space. When several of the houses are attacked badly by the monster, they become unsafe to stay in. Households retreat to the safe space until the worst of the attack is over. </p>
 <</if>>
<<if !$playerchoices.chosenactions.includes(11) && !$playerchoices.changedactions.includes(11)>>
<p>You didn’t connect to the local school or faith space. When several of the houses are attacked badly by the monster, they become unsafe to stay in. There is nowhere else for the neighbours to go, so they have to stay inside, hoping they can wait it out. </p>
 <</if>>
<<if $playerchoices.changedactions.includes(11)>>
<p>You weren’t able to connect to the local school or faith space. When several of the houses are attacked badly by the monster, they become unsafe to stay in. All you have are your own skills and resources. </p>
<p>Pick one player who will take a single action to provide support to the stranded households. </p>

 <</if>>
<<timed 3s>>
    <<replace "#nextButtonContainer">>
    <<button "Move on">>
            <<goto $nextpass>>
        <</button>>
    <</replace>>
<</timed>>
<<include "wallet">>
</main>

<<include "footeroptionappears">>

:: pullwildcards [nobr]
<<set $prevpass to "story">>
<<set $pass to "pullwildcards">>
<<set $nextpass to "aftermath">>
<<set $wildcardoptions to [
    "Local firefighters come to clear debris off the streets.", 
    "An emergency first aid van sets up on the street, knocking on doors and providing support where needed.", 
    "Free care packages with water, food and emergency supplies are dropped at each house.",
    "Your councillor sends around insurance experts, to ensure households can get good claims against economic damage."
]>>
<<set $wildcardsdrawn to []>> 
<<set $remainingwildcards to $playerchoices.wildcards>>

<main>
    <<if $remainingwildcards > 0 >>
        <p>Your helpful councillor has sent some extra support:  
        Pull <<print $remainingwildcards>> wildcard(s).</p>

        <div id="wildcardDisplay"></div>
        <div id="remainingwildcardsText">
            <p>Remaining wildcards: <<print $remainingwildcards>></p>
        </div>

        <div id="drawButtonContainer">
            <<button "Draw Wildcard">>
                <<set _drawnCard to "">>

                <<for _tries to 0; _tries lt 10; _tries++>> 
                    <<set _randomIndex to random(0, $wildcardoptions.length - 1)>>
                    <<set _potentialCard to $wildcardoptions[_randomIndex]>>
                    <<if not $wildcardsdrawn.includes(_potentialCard)>>
                        <<set _drawnCard to _potentialCard>>
                        <<set $wildcardsdrawn.push(_drawnCard)>>
                        <<set $remainingwildcards to $remainingwildcards - 1>>
                        <<break>>
                    <</if>>
                <</for>>

                <<replace "#wildcardDisplay">>
                    <p><strong>Wildcard:</strong> <<print _drawnCard>></p>
                <</replace>>

                <<replace "#remainingwildcardsText">>
                    <p>Remaining wildcards: <<print $remainingwildcards>></p>
                <</replace>>

                <<if $remainingwildcards == 0>>
                    <<replace "#drawButtonContainer">>
                        <<button "Move On">>
                            <<goto $nextpass>>
                        <</button>>
                    <</replace>>
                <</if>>
            <</button>>
        </div>

    <<else>>
        <<button "Move On">>
            <<goto $nextpass>>
        <</button>>
    <</if>>
</main>
<<include "footer">>

:: aftermath [nobr]
<<set $prevpass to "pullwildcards">>
<<set $pass to "aftermath">>
<<set $nextpass to "recovery">>

<main>
<h2>The monster attack is over. </h2>

<h3>As they retreat you are left with some consequences to contend with.</h3>

/* If Connect 5 is not selected */
<<if !$playerchoices.chosenactions.includes(12)>>
    <p>Neighbours feel low and upset having used outdated methods to try and keep the monster at bay. Their approaches just made the attack worse.</p>
 <</if>>

/* If monster is CRYSTAL And If Prepare 1 is not selected  */
 <<if $playerchoices.finalmonster is "Crystal" && !$playerchoices.chosenactions.includes(1)>>
<p>Due to slips and falls, some neighbours have been injured: there is one broken wrist and two sprained ankles.</p>
<</if>>

/* If monster is INFERNO And If Prepare 2 is not selected  */
<<if $playerchoices.finalmonster is "Inferno" && !$playerchoices.chosenactions.includes(2)>>
<p>Due to excessive heat, some neighbours have been injured: two are recovering from dehydration, and one is still in hospital, having fainted. </p>
<</if>>

/* If monster is GALE And If Prepare 3 is not selected  */
<<if $playerchoices.finalmonster is "Gale" && !$playerchoices.chosenactions.includes(3)>>
<p>Due to flying debris, some neighbours have been injured: one hit by a flying parasol is still in hospital. </p>
<</if>>

/* If monster is DRENCH And If Prepare 4 is not selected  */
<<if $playerchoices.finalmonster is "Drench" && !$playerchoices.chosenactions.includes(4)>>
<p>Due to floodwater, some neighbours have been injured: two still have respiratory infections from the floodwater, and a family remains traumatised from being stuck on the top floor of their house for several days. </p>
<</if>>

/* If Connect 1 is not selected  */
<<if !$playerchoices.chosenactions.includes(8)>>
<p>A neighbour who does not answer the door was not included the plans for the monster attack and wasn’t able to access support. </p>
<</if>>

/* If Connect 2 is not selected  */
<<if !$playerchoices.chosenactions.includes(9)>>
<p>A neighbour who doesn’t have WhatsApp was not included in the plans for the monster attack, and wasn’t able to access support. </p>
<</if>>

/* If Prepare 5 is not selected  */
<<if !$playerchoices.chosenactions.includes(5)>>
<p>The monster has stolen belongings and caused damage: one neighbour lost all their family photographs, and another is trying to work out how to afford a new computer. </p>
<</if>>

/* If Prepare 6 is not selected  */
<<if !$playerchoices.chosenactions.includes(6)>>
<p>Neighbours are still in shock from 24h without power, without emergency supplies to help them through.  </p>
<</if>>

/* If Prepare 7 is not selected  */
<<if !$playerchoices.chosenactions.includes(7)>>
<p>A neighbour, who was stranded, is left panicked and scared, having tried to call for help, but no one picked up.</p>
<</if>>

/* If Connect 3 is not selected  */
<<if !$playerchoices.chosenactions.includes(10)>>
<p>Households are still hungry and left emotionally impacted after days with very little food.</p> 
    <</if>>

/* If Connect 4 is not selected  */
<<if !$playerchoices.chosenactions.includes(11)>>
<p>Households are still scared having had to wait out the attack in unsafe properties with nowhere else to retreat to. </p>
<</if>>

<<button "Next">>
    <<goto $nextpass>>
    <</button>>
</main>


:: recovery [nobr]
<<set $prevpass to "aftermath">>
<<set $pass to "recovery">>
<<set $nextpass to "outro">>

<main class="timer">
    <h2>There is a lot to recover from. </h2>
    <p>But! You have each other, your skills, your resources and connections. </p>
    <p>You will use these to help High Street begin its recovery. </p>
    
    <p>Select three of the areas, and decide how you will use your skills & resources to help High Street. </p>
    <p>Perhaps you will use your construction skills to help repair a broken roof, or make a round of incredible sandwiches to lift everyone’s mood? </p>
    
    <p>Take three minutes to discuss the three actions you will take, using only what you have at your disposal (on your character cards). </p>
    <p>When you’re ready, share what you will do. </p>
    
    <<timed 5s>>
        <<include "headertimer">>
        <</timed>>
    
</main>
<<include "footeroptionappears">>


:: outro [nobr]
<<set $prevpass to "recovery">>
<<set $pass to "outro">>
<<set $nextpass to "questions">>

<main>
  <p> Now, the monster has left an impact, but thanks to your skills, your passions, and your connections, High Street has come together and is on the way to recovery. </p>

<p>There are still challenges and obstacles, & areas which need care & attention, but what you should remember is: </p>

<p>You faced this monster as a street, and when you came together, you didn’t only keep the street safe, you looked after each other too. </p>

<p>Well done, and no matter what remains, know that High Street is on the road to recovery, and we are Stronger Together.</p>

    
<<timed 3s>>
    <<replace "#nextButtonContainer">>
    <<button "Move on">>
            <<goto $nextpass>>
        <</button>>
    <</replace>>
<</timed>>
</main>
<<include "footeroptionappears">>


:: questions [nobr]
<<set $prevpass to "outro">>
<<set $pass to "questions">>
<<set $nextpass to "end">>

<main class="timer">
<h2>That’s the end of the game! </h2>
<p>There is now time to debrief and discuss. Talk through the three questions below. </p>
<br/>
<h3>Question 1</h3>
<p>Today, you came together to face the monster. </p>
<p>Some things went well, others less well, but you stuck it out: you were resilient. </p>
<p>If you were going to give your high street an award - a blue plaque - to hang on the wall and commemorate this street and your response to the attack - what would it say? </p>
<br/>
<h3>Question 2</h3>
<p>If you were to play again, how would you play differently? </p>
<br/>
<h3>Question 3 </h3>
<p>How did the game make you think about community resilience on your own street? </p>

  
    <<timed 5s>>
        <<include "headertimer">>
        <</timed>>
    
</main>
<<include "footeroptionappears">>


:: end [nobr]
<<set $prevpass to "questions">>
<<set $pass to "end">>
<<set $nextpass to "end">>
<main>
<h3>Thanks for playing!</h3>
<br/>
<<button "Restart">>
     <<script>>Engine.restart()<</script>>
    <</button>>
</main>
<<include "footerend">>